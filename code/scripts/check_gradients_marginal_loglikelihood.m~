function check_gradients_marginal_loglikelihood(theta, covfunc_t, covfunc_x, ...
    train_t, x, train_pairs, idx_global, idx_global_1, idx_global_2, ...
    ind_t, ind_x, Mtrain, N)
% check_gradients_marginal_loglikelihood(theta, covfunc_t, covfunc_x, ...
%    train_t, x, train_pairs, idx_global, idx_global_1, idx_global_2, ...
%    ind_t, ind_x, Mtrain, N)
%
% checks the gradients of marginal loglikelihood wrt hyperparameters
%
% INPUT:
%   - theta 
%   - covfunc_t 
%   - covfunc_x 
%   - train_t, x 
%   - train_pairs 
idx_global 
idx_global_1 
idx_global_2    
ind_t 
ind_x 
Mtrain 
N



% Edwin V. Bonilla (edwin.bonilla@nicta.com.au)
% Last udapte: 21/05/2011

ptr_func      = @negative_marginal_log_likelihood;
ptr_gradfunc = @gradient_negative_marginal_loglikelihood; 
delta = zeros(length(theta), 10);
for j = 1 : 10
    theta = rand(size(theta));
    [gradient, delta(:,j)] = gradchek(theta', ptr_func, ...
        ptr_gradfunc, covfunc_t, covfunc_x,  train_t, ...
        x, train_pairs, idx_global,  idx_global_1, idx_global_2, ind_t, ind_x, Mtrain, N);
end
figure;
hist(delta(end,:));
% save('delta.mat', 'delta');




